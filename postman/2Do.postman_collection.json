{
	"info": {
		"_postman_id": "695d10f5-4198-4b98-8b23-d854962bb180",
		"name": "2Do",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16719524"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"shaikhusman57@gmail.com\",\r\n    \"password\": \"test123\",\r\n    \"name\": \"Usman Shaikh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Registers a user to the database.\n\nStartFragment\n\n{  \"email\": \"admin@gmail.com\",  \"password\": \"admin123\",  \"name\": \"Admin\",  \"role\": \"admin\"}\n\nEndFragment\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\",\n  \"name\": \"Usman Shaikh\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  },\n  \"name\": {\n    \"type\": \"string\",\n    \"required\": true\n  }\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"if (data.data && data.data.tokens) {\r",
									"    pm.environment.set('accessToken', data.data.tokens.access.token);\r",
									"    pm.environment.set('refreshToken', data.data.tokens.refresh.token);\r",
									"    pm.environment.set('email', data.data.user.email);\r",
									"    pm.environment.set('createdBy', data.data.user._id);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"shaikhusman57@gmail.com\",\r\n  \"password\": \"test123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Authenticates the user at the backend and returns user token  \n{  \"email\": \"admin@gmail.com\",  \"password\": \"admin123\"}\n\nEndFragment\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  }\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"shaikhusman57@gmail.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						},
						"description": "Registers a user to the database.\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\",\n  \"name\": \"Usman Shaikh\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  },\n  \"name\": {\n    \"type\": \"string\",\n    \"required\": true\n  }\n}\n\n\n```"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"test123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzaGFpa2h1c21hbjU3QGdtYWlsLmNvbSIsImlhdCI6MTczODc2MDU1MywiZXhwIjoxNzM4NzYxMTUzLCJ0eXBlIjoiUkVTRVRfUEFTU1dPUkQifQ.P6OZKcR18bM5s_C-JLxAtuRpDpbMqZ0zpmBkqTFVSXs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"reset-password"
							],
							"query": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzaGFpa2h1c21hbjU3QGdtYWlsLmNvbSIsImlhdCI6MTczODc2MDU1MywiZXhwIjoxNzM4NzYxMTUzLCJ0eXBlIjoiUkVTRVRfUEFTU1dPUkQifQ.P6OZKcR18bM5s_C-JLxAtuRpDpbMqZ0zpmBkqTFVSXs"
								}
							]
						},
						"description": "Registers a user to the database.\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\",\n  \"name\": \"Usman Shaikh\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  },\n  \"name\": {\n    \"type\": \"string\",\n    \"required\": true\n  }\n}\n\n\n```"
					},
					"response": []
				},
				{
					"name": "Refresh Tokens",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh-tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh-tokens"
							]
						},
						"description": "Registers a user to the database.\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\",\n  \"name\": \"Usman Shaikh\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  },\n  \"name\": {\n    \"type\": \"string\",\n    \"required\": true\n  }\n}\n\n\n```"
					},
					"response": []
				},
				{
					"name": "Send Verification Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/send-verification-email",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"send-verification-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/verify-email?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2EzNDhmNjEyMTc4MDYxZDcwMTRmZDMiLCJpYXQiOjE3Mzg3NjczMzAsImV4cCI6MTczODc2NzkzMCwidHlwZSI6IlZFUklGWV9FTUFJTCJ9.cvO5sy8sVhkYdBbEhQ4lCKg69Soqktmux88PAbgYh8E",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"verify-email"
							],
							"query": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2EzNDhmNjEyMTc4MDYxZDcwMTRmZDMiLCJpYXQiOjE3Mzg3NjczMzAsImV4cCI6MTczODc2NzkzMCwidHlwZSI6IlZFUklGWV9FTUFJTCJ9.cvO5sy8sVhkYdBbEhQ4lCKg69Soqktmux88PAbgYh8E"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('accessToken', null);\r",
									"pm.environment.set('refreshToken', null);\r",
									"pm.environment.set('email', null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Authenticates the user at the backend and returns user token\n\n##### `Body Example`\n\n``` json\n{\n  \"email\": \"usman@gmail.com\",\n  \"password\": \"usman123\"\n}\n\n```\n\n##### `Body Schema`\n\n``` json\n{\n  \"email\": {\n    \"type\": \"string\",\n    \"unique\": \"Must be unique\",\n    \"required\": true\n  },\n  \"passowrd\": {\n    \"type\": \"string\",\n    \"minLength\": 8,\n    \"requirements\": \"At least one letter and one number\",\n    \"required\": true\n  }\n}\n\n\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date();\r",
									"now.setSeconds(now.getSeconds() + 15); // Set it 15 seconds in the future\r",
									"pm.environment.set(\"futureDateTime\", now.toISOString());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \" Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.\",\r\n    \"category\": \"67a348f712178061d7014fd5\",\r\n    \"cardColor\": \"#f96060\",\r\n    \"dateAndTime\": \"{{futureDateTime}}\",\r\n    \"alert\": true,\r\n    \"isCompleted\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date();\r",
									"now.setSeconds(now.getSeconds() + 15); // Set it 15 seconds in the future\r",
									"pm.environment.set(\"futureDateTime\", now.toISOString());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.\",\r\n    \"category\": \"67a348f712178061d7014fd5\",\r\n    \"cardColor\": \"#f96060\",\r\n    \"dateAndTime\": \"{{futureDateTime}}\",\r\n    \"alert\": true,\r\n    \"isCompleted\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/:taskId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "67a49b7cb1af32d5e8d87fe7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tasks/:taskId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "67a49c03b1af32d5e8d87ff9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/:taskId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "67a391449219b84e09266202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All Tasks With Filters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"category\": \"67a348f712178061d7014fd5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"all"
							]
						},
						"description": "categoryBy (here need to add category ID)  \nfilterBy (  \nfalse for incomplete-tasks,  \ntrue for completed-tasks &  \nfor all-tasks uncheck this field)"
					},
					"response": []
				},
				{
					"name": "Change Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isCompleted\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/change-status/:taskId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"change-status",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "67a391449219b84e09266202"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checklist",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date();\r",
									"now.setSeconds(now.getSeconds() + 15); // Set it 15 seconds in the future\r",
									"pm.environment.set(\"futureDateTime\", now.toISOString());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.\",\r\n    \"checklistItems\": [\r\n        {\r\n            \"isChecked\": true,\r\n            \"text\": \"one two three\"\r\n        }\r\n    ],\r\n    \"category\": \"67a348f712178061d7014fd5\",\r\n    \"cardColor\": \"#f96060\",\r\n    \"dateAndTime\": \"{{futureDateTime}}\",\r\n    \"alert\": true,\r\n    \"isCompleted\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checklists/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date();\r",
									"now.setSeconds(now.getSeconds() + 15); // Set it 15 seconds in the future\r",
									"pm.environment.set(\"futureDateTime\", now.toISOString());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"alert\": true,\r\n    \"isCompleted\": false,\r\n    \"cardColor\": \"#f96060\",\r\n    \"title\": \"usman\",\r\n    \"checklistItems\": [\r\n        {\r\n            \"isChecked\": true,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": false,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": false,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": false,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": true,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": true,\r\n            \"text\": \"one two three\"\r\n        },\r\n        {\r\n            \"isChecked\": true,\r\n            \"text\": \"one two three\"\r\n        }\r\n    ],\r\n    \"category\": \"67a348f712178061d7014fd5\",\r\n    \"dateAndTime\": \"{{futureDateTime}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checklists/:checklistId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								":checklistId"
							],
							"variable": [
								{
									"key": "checklistId",
									"value": "67a3a48b41fef92a5ca4682d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/:checklistId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								":checklistId"
							],
							"variable": [
								{
									"key": "checklistId",
									"value": "67a3a53941fef92a5ca46855"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checklists/:checklistId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								":checklistId"
							],
							"variable": [
								{
									"key": "checklistId",
									"value": "67a3a48b41fef92a5ca4682d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All Checklists With Filters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"category\": \"67a348f712178061d7014fd5\"\r\n//   \"isCompleted\": true,\r\n//   \"dateAndTime\": \"2022-07-25T10:55:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checklists/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"all"
							]
						},
						"description": "categoryBy (here need to add category ID)  \nfilterBy (  \nfalse for incomplete-tasks,  \ntrue for completed-tasks &  \nfor all-tasks uncheck this field)"
					},
					"response": []
				},
				{
					"name": "Change Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isCompleted\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checkLists/change-status/:checklistId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checkLists",
								"change-status",
								":checklistId"
							],
							"variable": [
								{
									"key": "checklistId",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Usman Shaikh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Statistic Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/statistic-report",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"statistic-report"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"categoryName\": \"Office\",\r\n  \"cardColor\": \"#880808\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categories/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"categoryName\": \"Office\",\r\n  \"cardColor\": \"#AA4A44\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categories/:categoryId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "67a38aaf038b4ebef28fbc3a"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/:categoryId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "67a38f9ed5f00dcd71ed3825"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Category With Task & CheckList Count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/with-task-and-checklist-count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"with-task-and-checklist-count"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/all?onlyCategories=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"all"
							],
							"query": [
								{
									"key": "onlyCategories",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}